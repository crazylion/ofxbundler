#!/usr/bin/env ruby
require 'optparse'
require 'faraday'
require 'nokogiri'
require 'ofxbundler'
options={}

def colorize(text, color_code)
  "\e[#{color_code}m#{text}\e[0m"
end

usage_helper=" ofxbundler help \n ofxbundler list : list latest openframeworks version \n ofxbundler install : install Openframeworks addons \n ofxbundler search keyword :  searching addons by keyword"

available_commands =%w(install search list)
if ARGV.size ==0  
    puts  usage_helper
    exit
end
command = ARGV.shift
if  !available_commands.include?(command)
    puts  usage_helper
end

case command
when "help" then
    puts  usage_helper
when "list" then
    response = Faraday.get do |req| 
        req.url "http://www.openframeworks.cc/download/"
    end
    doc = Nokogiri::HTML(response.body)
    version = doc.css("#download-latest-header h2")
    puts "Openframeworks current version is "+ version.text
when "install" then
    OfxBundler::Dsl.evalute("OfxFile")
    puts "ok"
when "search" then    
    w = ARGV.shift
    response = Faraday.get do |req| 
        req.url "http://ofxaddons.com/"
    end
    doc = Nokogiri::HTML(response.body)
    doc.css("div.repo").each do |repo|
        is_found=false;
        repo_name=''
        repo.css("p.name a").each do |item|
            text = item.text()
            if text.downcase.include?(w.downcase)
                is_found=true
                repo_name=text
            end
        end
        if is_found
            repo_author = repo.css("p.author").first.text()
            puts " "+colorize(repo_name,31)+" - #{repo_author}"
            repo_desc = repo.css("p.description em").first.text()
            repo_desc.gsub!(/\[view on Github\]/,'')
            github_link = (repo.css("p.description em a.github_link").first)["href"]
            puts "  "+colorize(repo_desc,32)
            puts "  github:"+github_link
        end
    end
end

